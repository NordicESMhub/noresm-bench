name: Python Package using Conda

on: [push]

jobs:
  build-linux:
    env:
      context: .
      image_name: noresm-container
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda env update --file environment.yml --name base
    - name: Create Dockerfile with hpccm
      working-directory: ./single-node
      run: |
        hpccm --recipe noresm_gnu_mpich.py --format docker > Dockerfile
    - name: Get image tags
      id: image_tags
      run: |
        echo -n ::set-output name=IMAGE_TAGS::
        VERSION=$(jq -r '.version' ${context}/version.json)
        TAGS=('latest')
        if [ "${VERSION}" ] && [ "${VERSION}" != "latest" ]; then
            TAGS+=("sn_gnu_mpich-${VERSION}")
        fi
        if [[ "${GITHUB_REF}" =~ refs/tags/(.*) ]]; then
            TAGS+=("git-sn_gnu_mpich-${BASH_REMATCH[1]}")
        fi
        ( IFS=$','; echo "${TAGS[*]}" )
    - name: Build and publish image to Quay
      uses: docker/build-push-action@v1
      with:
        path: ${{ env.context }}/single_node
        registry: ${{ secrets.REGISTRY_SERVER }}
        repository: ${{ secrets.REGISTRY_NAMESPACE }}/${{ env.image_name }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        tags: "sn_gnu_mpich-${{ steps.image_tags.outputs.IMAGE_TAGS }}"
